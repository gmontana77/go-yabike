{"ast":null,"code":"var _jsxFileName = \"/Users/miguel/Desktop/GrowPro/fullMean/src/app/components/button/index.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BaseButton = styled.button`\n    ${{\n  \"paddingLeft\": \"1.25rem\",\n  \"paddingRight\": \"1.25rem\",\n  \"paddingTop\": \"0.75rem\",\n  \"paddingBottom\": \"0.75rem\",\n  \"outline\": \"2px solid transparent\",\n  \"outlineOffset\": \"2px\",\n  \"borderRadius\": \"0.375rem\",\n  \"--tw-text-opacity\": \"1\",\n  \"color\": \"rgba(255, 255, 255, var(--tw-text-opacity))\",\n  \"fontSize\": \"0.75rem\",\n  \"lineHeight\": \"1rem\",\n  \"fontWeight\": \"600\",\n  \"borderColor\": \"rgba(0, 0, 0, 0)\",\n  \"borderWidth\": \"2px\",\n  \"borderStyle\": \"solid\",\n  \":focus\": {\n    \"outline\": \"2px solid transparent\",\n    \"outlineOffset\": \"2px\"\n  },\n  \"transitionProperty\": \"all\",\n  \"transitionTimingFunction\": \"cubic-bezier(0.4, 0, 0.2, 1)\",\n  \"transitionDuration\": \"200ms\",\n  \"margin\": \"0.25rem\"\n}};\n`;\nconst OutlinedButton = styled(BaseButton)`\n    ${{\n  \"--tw-bg-opacity\": \"1\",\n  \"backgroundColor\": \"rgba(0, 0, 0, 0)\",\n  \"--tw-text-opacity\": \"1\",\n  \"color\": \"rgba(239, 68, 68, var(--tw-text-opacity))\",\n  \"--tw-border-opacity\": \"1\",\n  \"borderColor\": \"rgba(239, 68, 68, var(--tw-border-opacity))\"\n}};\n`;\n_c = OutlinedButton;\nconst FilledButton = styled(BaseButton)`\n    ${{\n  \"--tw-border-opacity\": \"1\",\n  \"borderColor\": \"rgba(0, 0, 0, 0)\",\n  \"--tw-text-opacity\": \"1\",\n  \"color\": \"rgba(255, 255, 255, var(--tw-text-opacity))\",\n  \"backgroundColor\": \"rgba(239, 68, 68, var(--tw-bg-opacity))\",\n  \"--tw-bg-opacity\": \"1\"\n}};\n`;\n_c2 = FilledButton;\nexport function Button(props) {\n  const {\n    theme,\n    text\n  } = props;\n  if (theme === \"filled\") return /*#__PURE__*/_jsxDEV(FilledButton, {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 36\n  }, this);else return /*#__PURE__*/_jsxDEV(OutlinedButton, {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 17\n  }, this);\n}\n_c3 = Button;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"OutlinedButton\");\n$RefreshReg$(_c2, \"FilledButton\");\n$RefreshReg$(_c3, \"Button\");","map":{"version":3,"sources":["/Users/miguel/Desktop/GrowPro/fullMean/src/app/components/button/index.tsx"],"names":["React","styled","BaseButton","button","OutlinedButton","FilledButton","Button","props","theme","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AASA,MAAMC,UAAU,GAAGD,MAAM,CAACE,MAAO;AACjC,MAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAkBF;AACN,CApBA;AAqBA,MAAMC,cAAc,GAAGH,MAAM,CAACC,UAAD,CAAa;AAC1C,MAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAKF;AACN,CAPA;KAAME,c;AASN,MAAMC,YAAY,GAAGJ,MAAM,CAACC,UAAD,CAAa;AACxC,MAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAOF;AACN,CATA;MAAMG,Y;AAWN,OAAO,SAASC,MAAT,CAAgBC,KAAhB,EAAqC;AACxC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBF,KAAxB;AAEA,MAAIC,KAAK,KAAK,QAAd,EAAwB,oBAAO,QAAC,YAAD;AAAA,cAAeC;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP,CAAxB,KACK,oBAAO,QAAC,cAAD;AAAA,cAAiBA;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAP;AAER;MANeH,M","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport tw from 'twin.macro'\n\n\ninterface IButtonProps {\n    theme?: \"filled\" | \"outlined\"; \n    text: string;\n}\n\nconst BaseButton = styled.button`\n    ${tw`\n        pl-5\n        pr-5 \n        pt-3 \n        pb-3 \n        outline-none\n        rounded-md \n        text-white \n        text-xs \n        font-semibold \n        border-transparent\n        border-2 \n        border-solid \n        focus:outline-none \n        transition-all \n        duration-200 \n        ease-in-out\n        m-1 \n    `};\n`;\nconst OutlinedButton = styled(BaseButton)`\n    ${tw`\n      bg-red-500 \n      hover: bg-transparent\n      hover: text-red-500 \n      hover: border-red-500 \n    `};\n`;\n\nconst FilledButton = styled(BaseButton)`\n    ${tw`\n      border-red-500 \n      text-red-500 \n      bg-transparent \n      hover: bg-red-500\n      hover: text-white\n      hover: border-transparent \n    `};\n`;\n\nexport function Button(props: IButtonProps) {\n    const { theme, text } = props;\n\n    if (theme === \"filled\") return <FilledButton>{text}</FilledButton>;\n    else return <OutlinedButton>{text}</OutlinedButton>;\n\n}"]},"metadata":{},"sourceType":"module"}